THIS IS THE FIRST COMMIT

1) What are comments?

Comments are lines of code that are designed not be read by the computer. How this is achieved 
varies, depending on the program that you're using.


2) Demonstrate at least 2 ways to create a comment. One should be for multiple lines.

Method 1: " # " before each line of code 
Method 2:  Using TRIPLE QUOTES on each side of each comment. This enables the user to write on multiple lines.


3) If the name of a file is app.py what do we type in the command line to tell our computer to run it?

Enter the following: python3 app.py


4) Demonstrate how I can tell a Python program to display something in the command line.

By using the print() function. 


5) What can we use to save a value for later use in our code? Provide an example.

In order to save a value for later, we use a "Variable", which can be referenced for frequent usage throughout the 
program. Here's an example. 

Ex. Say you wanted to reference the number 4 in a mathematical operation. 
I would reference it by assigning to the variable frequentNumber = 4
this will allow the computer to understand that this is the variable that I'm trying to access.


6) What can I do to prevent certain files and directories from being tracked by git?

We can do this by creating a .gitignore file inside to the directory that is connected to the remote 
repository. Once the .gitignore file is created, we open it up, and type the names of the files that we don't 
want to be shared. However, in order for this to work, the files in question, and the .gitignore file must share the 
same directory location. 


7) What can be used in order to repeat some block of code? Provide 2 examples.

One Method is The While Loop: 
Ex: In this example, as long as i equals 6, it will keep printing

i = 1
while i < 6:
  print(i)
  i += 1

Another method is the for loop, which is used iterating over a sequence
Ex: As long as x equals an item in the sequence, the code will print

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)



8) When saving a value for later use what type of operator do we use?

We use the operator " = ". 


9) What's the key difference between git revert and git reset?

Git revert maintains the history of changes made, while git reset wipes it out completely. 


10) What's the key difference between Python lists and tuples?

A lists can be manipulated by adding, removing, and replacing items/values. 
A tuple can't be amended once it has been created.


11) What can I do to know where I am within my file system?

type in the command "pwd" to get a detailed path, or type "cd ." for the directory that you're currently in.

12) Describe the anatomy of a Python dictionary and create one below.

A python dictionay is used to store key: value pairs. 
Ex. 

gabrielFirstDict = {
	"Name": "Gabriel Jefferson",
    "DOB": "NOT GIVEN",
    "Favorite Color": "Blue"
    }
    
print(gabrielFirstDict)

print("Gabriel's Full Name is: " + gabrielFirstDict["Name"])


13) What type of values can be in a Python dictionary?

Values inside a dictionary can be of any data type.


14) What type of values can be in a Python list?

A python list can store any type of value.


15) What data type are True and False?

Booleans


16) What language does your computer understand?

A computer only understands 1's and 0's. Otherwise known as Binary. 


17) What do we need in order for your computer to make use of programming languages?

The computer needs a compiler in order to translate from backend code to machine code.


18) At what index is your instructor's name located in this list? ["Ron", "Troy", "Martha"]

Index 0 = Ron, Index 1 = Troy, and Index 2 = Martha


19) What does frontend / client side mean?

This the part of a computer application that interacts with the user. It consists of the content shown, 
where its located on a page, and how it looks. 


20) What does backend / server side mean?

The part of an application responsible for talking to the computer via computer code. 
It is also repsponsible for the management and storage of data.


21) What are 3 way to create a Python string?

Method 1: 'Single quotes on both sides"
Method 2: "Double quotes on both sides"
Method 3: """Triple quotes on both sies""", which results in a multiline string



22) What are 2 types of number data types in Python? Provide an example.

Integers - Whole numbers (ex. 1, 2, 3)
Floats - Integers with decimal points (ex. 1.3, 4.5, 324.5)


23) Are we able to add two strings together? How?

print ("Hello" + " " + "World")


24) What commands would you use to create the following file structure? (write every command line by line):
    
    Desktop
    -> projects
        -> instagram
            -> images
                -> profile_image.jpg
            -> app.py
        -> tiktok
            -> clips
            -> app.py


25) What is the path to profile_image.jpg?


26) What commands can I use to get from the clips directory to the images directory? (write every command line by line):


27) What method can I use to change this string from "troy" to "Troy"? 


28) What method can I use to change this string from "TROY" to "troy"?


29) How can I check to see if all of the characters in a string are numbers/digits?


30) How can I split a string into a list with each value in the list being a line of the string?


31) What are the Python comparison operators? List each and describe.


32) What are the Python logical operators? List each and describe.


33) How can we decide to run one piece of code versus another? Provide an example.


34) What can I do to work on my primary code, but not mess it up? Provide an example.


35) What do I do in order to make sure I have the latest code on my machine?


36) How can I accept user input into my Python code?


37) How can I see all of my git commits?


38) How can I add a value to a Python list?


39) How can I remove a value from a Python list?


40) How can I access a value in a Python dictionary?


41) How can I remove a value from a Python dictionary?


42) How can I change a value in a Python dictionary?


43) What is a pull request? Describe it in detail.


44) Why do we use services like Github?


45) How can I create a git branch?


46) How can I switch to another branch?


47) What happens if multiple engineers try to change the same area of a codebase from different points in time?


48) What are the 3 stages of of tracking our work with git?


49) What are the commands we'd use, in order, to move our changes through these stages?


50) Is spacing in my Python code important? Why?