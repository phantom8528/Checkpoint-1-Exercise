THIS IS THE FIRST COMMIT

1) What are comments?

Comments are lines of code that are designed not be read by the computer. How this is achieved 
varies, depending on the program that you're using.


2) Demonstrate at least 2 ways to create a comment. One should be for multiple lines.

Method 1: " # " before each line of code 
Method 2:  Using TRIPLE QUOTES on each side of each comment. This enables the user to write on multiple lines.


3) If the name of a file is app.py what do we type in the command line to tell our computer to run it?

Enter the following: python3 app.py


4) Demonstrate how I can tell a Python program to display something in the command line.

By using the print() function. 


5) What can we use to save a value for later use in our code? Provide an example.

In order to save a value for later, we use a "Variable", which can be referenced for frequent usage throughout the 
program. Here's an example. 

Ex. Say you wanted to reference the number 4 in a mathematical operation. 
I would reference it by assigning to the variable frequentNumber = 4
this will allow the computer to understand that this is the variable that I'm trying to access.


6) What can I do to prevent certain files and directories from being tracked by git?

We can do this by creating a .gitignore file inside to the directory that is connected to the remote 
repository. Once the .gitignore file is created, we open it up, and type the names of the files that we don't 
want to be shared. However, in order for this to work, the files in question, and the .gitignore file must share the 
same directory location. 


7) What can be used in order to repeat some block of code? Provide 2 examples.

One Method is The While Loop: 
Ex: In this example, as long as i equals 6, it will keep printing

i = 1
while i < 6:
  print(i)
  i += 1

Another method is the for loop, which is used iterating over a sequence
Ex: As long as x equals an item in the sequence, the code will print

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)



8) When saving a value for later use what type of operator do we use?

We use the operator " = ". 


9) What's the key difference between git revert and git reset?

Git revert maintains the history of changes made, while git reset wipes it out completely. 


10) What's the key difference between Python lists and tuples?

A lists can be manipulated by adding, removing, and replacing items/values. 
A tuple can't be amended once it has been created.


11) What can I do to know where I am within my file system?

type in the command "pwd" to get a detailed path, or type "cd ." for the directory that you're currently in.

12) Describe the anatomy of a Python dictionary and create one below.

A python dictionay is used to store key: value pairs. 
Ex. 

gabrielFirstDict = {
	"Name": "Gabriel Jefferson",
    "DOB": "NOT GIVEN",
    "Favorite Color": "Blue"
    }
    
print(gabrielFirstDict)

print("Gabriel's Full Name is: " + gabrielFirstDict["Name"])


13) What type of values can be in a Python dictionary?

Values inside a dictionary can be of any data type.


14) What type of values can be in a Python list?

A python list can store any type of value.


15) What data type are True and False?

Booleans


16) What language does your computer understand?

A computer only understands 1's and 0's. Otherwise known as Binary. 


17) What do we need in order for your computer to make use of programming languages?

The computer needs a compiler in order to translate from backend code to machine code.


18) At what index is your instructor's name located in this list? ["Ron", "Troy", "Martha"]

Index 0 = Ron, Index 1 = Troy, and Index 2 = Martha


19) What does frontend / client side mean?

This the part of a computer application that interacts with the user. It consists of the content shown, 
where its located on a page, and how it looks. 


20) What does backend / server side mean?

The part of an application responsible for talking to the computer via computer code. 
It is also repsponsible for the management and storage of data.


21) What are 3 way to create a Python string?

Method 1: 'Single quotes on both sides"
Method 2: "Double quotes on both sides"
Method 3: """Triple quotes on both sies""", which results in a multiline string



22) What are 2 types of number data types in Python? Provide an example.

Integers - Whole numbers (ex. 1, 2, 3)
Floats - Integers with decimal points (ex. 1.3, 4.5, 324.5)


23) Are we able to add two strings together? How?

print ("Hello" + " " + "World")


24) What commands would you use to create the following file structure? (write every command line by line):
    
    Desktop
    -> projects
        -> instagram
            -> images
                -> profile_image.jpg
            -> app.py
        -> tiktok
            -> clips
            -> app.py

Following is what we would use to create this command structure (navigations included)
pwd 
mkdir projects 
ls 
cd projects 
mkdir instagram; mkdir tiktok;
ls
cd instagram
touch app.py
mkdir images
ls
cd images
touch profile_image.jpg
cd ..
cd tiktok
mkdir clips
touch app.py
cd ..
cd ..

The last command should leave you on the desktop

25) What is the path to profile_image.jpg?

~/Desktop/projects/instagram/images/profile_image.jpg


26) What commands can I use to get from the clips directory to the images directory? (write every command line by line):

cd .. <-- In order to get out of the clips directory
cd instagram/images <-- to go directly to the images directory


27) What method can I use to change this string from "troy" to "Troy"? 


print("Enter your name:")
x = input() #<-- troy is provided as input
print("Hello, " + x.capitalize()) #<-- the first letter is capitalized


28) What method can I use to change this string from "TROY" to "troy"?

print ("Enter Your Name: ")
x = input() #<-- TROY is provided as a input
print (x.swapcase()) #<-- prints the input in all lower case letters


29) How can I check to see if all of the characters in a string are numbers/digits?

print ("Type in a Number: ")
x = input() #<-- Allows user to type in the name of the user
y = x.isnumeric() #<-- verifies whether or not y is numeric
print(y)

30) How can I split a string into a list with each value in the list being a line of the string?

string = "Red, Blue, Green"

lst = string.split(',')

print(lst)
print('Element types:', type(lst[0]))
print('Length:', len(lst))


31) What are the Python comparison operators? List each and describe.

== | If the  values are equal and the condition becomes TRUE
!= | If values of two operands are NOT equal, the condition becomes TRUE
<> | If values of two operands are NOT equal, the condition becomes TRUE
>  | If left operand is greater than the right operand, the condition becomes TRUE
<  | If right operand is greater than the left operand, the condition becomes TRUE
>= | If left operand is greater than or equal to the right operand, the condition becomes TRUE
<= | If left operand is less than or equal to the right operand, the condition becomes TRUE


32) What are the Python logical operators? List each and describe.

AND | If both operands are TRUE, than the condition becomes TRUE
OR  | If any of the two operands are non-zero, then the condition becomes TRUE
NOT | Used to reverse the logical state of an operand


33) How can we decide to run one piece of code versus another? Provide an example.

In python, this is done by commenting out the line / lines of code that you don't want to compile


34) What can I do to work on my primary code, but not mess it up? Provide an example.

Using the tools provided by git, start a new branch (commannd: git checkout -b [NAME OF THE BRANCH]).
This will allow you to work out what ever problems or ideas you may have, without compromising the 
primary code base.


35) What do I do in order to make sure I have the latest code on my machine?

Pull up the terminal. Navigate to the repository on your local machine, and type in the command 
"git pull". This will update your repository with all the changes made to the code base while you were absent. 


36) How can I accept user input into my Python code?

By using the input() function. 
ex. 

print("Enter Your Name: ")
x = input()
print ("Hello" + x)



37) How can I see all of my git commits?

By typing the command "git log" or "git log --oneline", if you don't want to see all the details.


38) How can I add a value to a Python list?

The append() function adds a value to the end of a list, the insert() function adds a value to the frontend
of a list. The extend() function can add another list onto an existing list.

39) How can I remove a value from a Python list?


By using the .remove() function. 
Ex. 

sampleList = [red, blue, green]
sampleList.remove(red) #<-- This removes the item red from the list before it is printed
print ("The New List is: ", sampleList)

40) How can I access a value in a Python dictionary?

By printing the name of the dictionary in parentheses, followed by the LHS value key in square brackets

Ex. print (theDict ["LHS Value Key])


41) How can I remove a value from a Python dictionary?

Using the .pop() will remove the element from the dictionary.

ex. sampleDict.pop("Element 1")

Using the .clear() function will clear out the dictionary completely

ex. sampleDict.clear()

42) How can I change a value in a Python dictionary?

You can change the value of a specific item by referring to its key name
ex. 

#<--- Question 42 

testDict = {
    "item1": "blue",
    "item2": "red",
    "item3": "green"
    }
    
testDict ["item1"] = "orange" #<-- Replaces blue with orange
print(testDict)


43) What is a pull request? Describe it in detail.

A pull request (initiated by the command git pulll) is when you update your repository
on your local branch with code uploaded to the remote repository by other developers.


44) Why do we use services like Github?

Services like github are more reliable repositories for a given project's version conrol. 
There location in the cloud, accompanied by there computing power, allows individuals to scale 
projects and teams reliably.


45) How can I create a git branch?

First, you must confirm that your master branch is being trakced via git. 
Second, type the following command while in the master branch:

git branch [NAME OF THE BRANCH]
or
git checkout -b [NAME OF THE BRANCH]

The second command will take you directly to the branch after it's conception, while the first command
will simply create the branch. 
If you choose to use the first command you'll have the transition to the branch using the second command below:

git checKout [NAME OF THE BRANCH YOU JUST CREATED]



46) How can I switch to another branch?

By typing the command: git checkout [NAME OF BRANCH]

47) What happens if multiple engineers try to change the same area of a codebase from different points in time?

A merge conflict will take place. The team members responsible for code review, or the project leader, will be 
responsible for deciding which piece of code will be merged with the master code base.

48) What are the 3 stages of of tracking our work with git?

The three stages are the following:
1. Working Tree - where all the work gets done.
2. Staging
3. Commit


49) What are the commands we'd use, in order, to move our changes through these stages?

Working Tree | simply create the file inside of the local/remote repository that's being tracked by git
Staging      | git add [NAME OF FILE] or git add . 
Commit       | git commit -m "[MESSAGE CONCERNING THIS COMMIT]"

50) Is spacing in my Python code important? Why?